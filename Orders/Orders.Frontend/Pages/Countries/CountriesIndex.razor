@page "/countries"
@*  @inject IRepository repository *@
<h3>Paises</h3>

<div class="d-flex justify-content-center aling-items-center">
    <a class="btn btn-primary" href="/countries/create">Nuevo País</a>
</div>

<GenericList MyList="Countries"> <!--Utilizamos un la clase GenericList, en el front carpeta shared--> <!--Le indico como quiero que me carge el contenido que le doy en la lista-->
    <Body>
        <table class="table table-striped "> <!--Bootstrap -->
        <thead>
            <tr>
                <th>País</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var country in Countries!) //le indicamos la ! pq puede ser nulo que no halla ningun pais almacenado
            {                                    //hacemos un for each de la lista creada abajo Countries
                <tr>
                    <td>@country.Name</td>
                    <td>
                        <a href="/countries/edit/@country.Id" class="btn btn-warning">Editar</a>
                        <button class="btn btn-danger">Borrar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    </Body>
</GenericList>

@* 
Hemos decidido crea una clase .razor.cs para que este el codigo mas ordenado, aqui va a estar solo el puro codigo html y en la clase que hemos creado estara el restod e codigo
@code {
    public List<Country>? Countries { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var responseHttp = await repository.GetAsync<List<Country>>("api/countries"); //estamos yendo al backend y rellenando una lista con los paises || se pone la url del controlador del back
        Countries = responseHttp.Response;                                            
    }
*@

